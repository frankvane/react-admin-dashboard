{
    "sourceFile": "src/pages/permission/auth/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1742097617722,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1742097633241,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,4 @@\n-const index = () => {\r\n-  return <div>index</div>;\r\n+const Auth = () => {\r\n+  return <div>Auth</div>;\r\n };\r\n-export default index;\r\n+export default Auth;\r\n"
                },
                {
                    "date": 1742101377228,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,326 +0,0 @@\n-<<<<<<< HEAD\n-const Auth = () => {\r\n-  return <div>Auth</div>;\r\n-};\r\n-export default Auth;\r\n-=======\n-import React, { useEffect, useState } from 'react';\n-import { Button, Card, Checkbox, Divider, Form, Select, Space, Table, Tree, message } from 'antd';\n-import type { ColumnsType } from 'antd/es/table';\n-import type { DataNode } from 'antd/es/tree';\n-\n-interface Permission {\n-  id: string;\n-  name: string;\n-  description: string;\n-  module: string;\n-  type: 'menu' | 'operation' | 'data';\n-}\n-\n-interface Role {\n-  id: number;\n-  name: string;\n-  description: string;\n-}\n-\n-const AuthManagement: React.FC = () => {\n-  const [loading, setLoading] = useState(false);\n-  const [permissions, setPermissions] = useState<Permission[]>([]);\n-  const [roles, setRoles] = useState<Role[]>([]);\n-  const [selectedRole, setSelectedRole] = useState<number | null>(null);\n-  const [checkedKeys, setCheckedKeys] = useState<React.Key[]>([]);\n-  const [treeData, setTreeData] = useState<DataNode[]>([]);\n-\n-  // 模拟获取权限和角色数据\n-  useEffect(() => {\n-    setLoading(true);\n-    // 模拟 API 请求\n-    setTimeout(() => {\n-      const mockPermissions: Permission[] = [\n-        {\n-          id: 'dashboard',\n-          name: '仪表盘',\n-          description: '查看仪表盘',\n-          module: '仪表盘',\n-          type: 'menu',\n-        },\n-        {\n-          id: 'user:view',\n-          name: '查看用户',\n-          description: '查看用户列表',\n-          module: '用户管理',\n-          type: 'menu',\n-        },\n-        {\n-          id: 'user:create',\n-          name: '创建用户',\n-          description: '创建新用户',\n-          module: '用户管理',\n-          type: 'operation',\n-        },\n-        {\n-          id: 'user:edit',\n-          name: '编辑用户',\n-          description: '编辑用户信息',\n-          module: '用户管理',\n-          type: 'operation',\n-        },\n-        {\n-          id: 'user:delete',\n-          name: '删除用户',\n-          description: '删除用户',\n-          module: '用户管理',\n-          type: 'operation',\n-        },\n-        {\n-          id: 'role:view',\n-          name: '查看角色',\n-          description: '查看角色列表',\n-          module: '角色管理',\n-          type: 'menu',\n-        },\n-        {\n-          id: 'role:create',\n-          name: '创建角色',\n-          description: '创建新角色',\n-          module: '角色管理',\n-          type: 'operation',\n-        },\n-        {\n-          id: 'role:edit',\n-          name: '编辑角色',\n-          description: '编辑角色信息',\n-          module: '角色管理',\n-          type: 'operation',\n-        },\n-        {\n-          id: 'role:delete',\n-          name: '删除角色',\n-          description: '删除角色',\n-          module: '角色管理',\n-          type: 'operation',\n-        },\n-        {\n-          id: 'auth:view',\n-          name: '查看权限',\n-          description: '查看权限列表',\n-          module: '授权管理',\n-          type: 'menu',\n-        },\n-        {\n-          id: 'auth:assign',\n-          name: '分配权限',\n-          description: '为角色分配权限',\n-          module: '授权管理',\n-          type: 'operation',\n-        },\n-      ];\n-\n-      const mockRoles: Role[] = [\n-        {\n-          id: 1,\n-          name: '超级管理员',\n-          description: '拥有所有权限',\n-        },\n-        {\n-          id: 2,\n-          name: '内容编辑',\n-          description: '管理内容相关功能',\n-        },\n-        {\n-          id: 3,\n-          name: '普通用户',\n-          description: '基础功能访问',\n-        },\n-        {\n-          id: 4,\n-          name: '测试人员',\n-          description: '测试环境所有权限',\n-        },\n-        {\n-          id: 5,\n-          name: '访客',\n-          description: '只读权限',\n-        },\n-      ];\n-\n-      setPermissions(mockPermissions);\n-      setRoles(mockRoles);\n-\n-      // 构建树形结构\n-      const modules = Array.from(new Set(mockPermissions.map(p => p.module)));\n-      const tree: DataNode[] = modules.map(module => {\n-        const modulePermissions = mockPermissions.filter(p => p.module === module);\n-        return {\n-          title: module,\n-          key: module,\n-          children: modulePermissions.map(p => ({\n-            title: p.name,\n-            key: p.id,\n-            isLeaf: true,\n-          })),\n-        };\n-      });\n-\n-      setTreeData(tree);\n-      setLoading(false);\n-    }, 1000);\n-  }, []);\n-\n-  // 表格列定义\n-  const columns: ColumnsType<Permission> = [\n-    {\n-      title: 'ID',\n-      dataIndex: 'id',\n-      key: 'id',\n-    },\n-    {\n-      title: '权限名称',\n-      dataIndex: 'name',\n-      key: 'name',\n-    },\n-    {\n-      title: '描述',\n-      dataIndex: 'description',\n-      key: 'description',\n-    },\n-    {\n-      title: '所属模块',\n-      dataIndex: 'module',\n-      key: 'module',\n-    },\n-    {\n-      title: '类型',\n-      dataIndex: 'type',\n-      key: 'type',\n-      render: (type) => {\n-        const typeMap = {\n-          menu: '菜单',\n-          operation: '操作',\n-          data: '数据',\n-        };\n-        return typeMap[type] || type;\n-      },\n-    },\n-  ];\n-\n-  // 处理角色选择\n-  const handleRoleChange = (value: number) => {\n-    setSelectedRole(value);\n-    \n-    // 模拟获取角色权限\n-    setLoading(true);\n-    setTimeout(() => {\n-      // 根据角色ID获取不同的权限\n-      let rolePermissions: string[] = [];\n-      \n-      if (value === 1) { // 超级管理员\n-        rolePermissions = permissions.map(p => p.id);\n-      } else if (value === 2) { // 内容编辑\n-        rolePermissions = ['dashboard', 'user:view', 'role:view', 'auth:view'];\n-      } else if (value === 3) { // 普通用户\n-        rolePermissions = ['dashboard'];\n-      } else if (value === 4) { // 测试人员\n-        rolePermissions = ['dashboard', 'user:view', 'role:view', 'auth:view', 'user:create', 'user:edit'];\n-      } else if (value === 5) { // 访客\n-        rolePermissions = ['dashboard'];\n-      }\n-      \n-      setCheckedKeys(rolePermissions);\n-      setLoading(false);\n-    }, 500);\n-  };\n-\n-  // 处理权限树选择\n-  const onCheck = (checked: React.Key[] | { checked: React.Key[]; halfChecked: React.Key[] }) => {\n-    if (Array.isArray(checked)) {\n-      setCheckedKeys(checked);\n-    } else {\n-      setCheckedKeys(checked.checked);\n-    }\n-  };\n-\n-  // 保存权限设置\n-  const handleSave = () => {\n-    if (!selectedRole) {\n-      message.warning('请先选择角色');\n-      return;\n-    }\n-    \n-    message.success(`已为角色 \"${roles.find(r => r.id === selectedRole)?.name}\" 更新权限设置`);\n-  };\n-\n-  return (\n-    <Card title=\"授权管理\" variant=\"borderless\">\n-      <Form layout=\"vertical\">\n-        <Form.Item label=\"选择角色\" required>\n-          <Select\n-            placeholder=\"请选择角色\"\n-            style={{ width: 300 }}\n-            onChange={handleRoleChange}\n-            options={roles.map(role => ({ label: role.name, value: role.id }))}\n-          />\n-        </Form.Item>\n-        \n-        {selectedRole && (\n-          <>\n-            <Divider orientation=\"left\">权限分配</Divider>\n-            \n-            <div style={{ display: 'flex', marginBottom: 16 }}>\n-              <div style={{ flex: 1 }}>\n-                <Card title=\"权限树\" size=\"small\" style={{ marginRight: 16 }}>\n-                  <Tree\n-                    checkable\n-                    onCheck={onCheck}\n-                    checkedKeys={checkedKeys}\n-                    treeData={treeData}\n-                    height={400}\n-                    loading={loading}\n-                  />\n-                </Card>\n-              </div>\n-              \n-              <div style={{ flex: 1 }}>\n-                <Card title=\"权限列表\" size=\"small\">\n-                  <Table\n-                    columns={columns}\n-                    dataSource={permissions}\n-                    rowKey=\"id\"\n-                    size=\"small\"\n-                    pagination={false}\n-                    loading={loading}\n-                    scroll={{ y: 350 }}\n-                    rowSelection={{\n-                      type: 'checkbox',\n-                      selectedRowKeys: checkedKeys as string[],\n-                      onChange: (selectedRowKeys) => {\n-                        setCheckedKeys(selectedRowKeys);\n-                      },\n-                    }}\n-                  />\n-                </Card>\n-              </div>\n-            </div>\n-            \n-            <Form.Item>\n-              <Space>\n-                <Button type=\"primary\" onClick={handleSave}>\n-                  保存设置\n-                </Button>\n-                <Button onClick={() => {\n-                  setSelectedRole(null);\n-                  setCheckedKeys([]);\n-                }}>\n-                  取消\n-                </Button>\n-              </Space>\n-            </Form.Item>\n-          </>\n-        )}\n-      </Form>\n-    </Card>\n-  );\n-};\n-\n-export default AuthManagement;\n->>>>>>> 368ce12dbaf6a31e21c62b8bed82cf21008a9e08\n\\ No newline at end of file\n"
                }
            ],
            "date": 1742097617722,
            "name": "Commit-0",
            "content": "const index = () => {\r\n  return (\r\n    <div>index</div>\r\n  )\r\n}\r\nexport default index"
        }
    ]
}