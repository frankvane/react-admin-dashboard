{
    "sourceFile": "src/components/TagsView/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 20,
            "patches": [
                {
                    "date": 1742032883390,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1742032908375,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -148,11 +148,14 @@\n     />\r\n   );\r\n \r\n   // 自定义标签\r\n-  const renderTabBar: any = (props: any, DefaultTabBar: any) => (\r\n+  const renderTabBar = (\r\n+    props: unknown,\r\n+    DefaultTabBar: React.ComponentType<unknown>\r\n+  ) => (\r\n     <DefaultTabBar {...props}>\r\n-      {(node: any) => (\r\n+      {(node: React.ReactNode) => (\r\n         <div className=\"ant-tabs-tab\" style={{ marginRight: 0 }}>\r\n           {node}\r\n         </div>\r\n       )}\r\n"
                },
                {
                    "date": 1742032916093,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { Button, Dropdown, Menu, Space, Tabs, Tooltip } from \"antd\";\r\n-import { CloseOutlined, DownOutlined } from \"@ant-design/icons\";\r\n import { useCallback, useEffect, useState } from \"react\";\r\n import { useLocation, useNavigate } from \"react-router-dom\";\r\n \r\n+import { DownOutlined } from \"@ant-design/icons\";\r\n import React from \"react\";\r\n \r\n export interface TagItem {\r\n   key: string;\r\n"
                },
                {
                    "date": 1742032940348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n import { useLocation, useNavigate } from \"react-router-dom\";\r\n \r\n import { DownOutlined } from \"@ant-design/icons\";\r\n import React from \"react\";\r\n+import type { TabsProps } from \"antd\";\r\n \r\n export interface TagItem {\r\n   key: string;\r\n   label: string;\r\n"
                },
                {
                    "date": 1742032966348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,8 @@\n import { useLocation, useNavigate } from \"react-router-dom\";\r\n \r\n import { DownOutlined } from \"@ant-design/icons\";\r\n import React from \"react\";\r\n-import type { TabsProps } from \"antd\";\r\n \r\n export interface TagItem {\r\n   key: string;\r\n   label: string;\r\n@@ -148,22 +147,8 @@\n       ]}\r\n     />\r\n   );\r\n \r\n-  // 自定义标签\r\n-  const renderTabBar = (\r\n-    props: unknown,\r\n-    DefaultTabBar: React.ComponentType<unknown>\r\n-  ) => (\r\n-    <DefaultTabBar {...props}>\r\n-      {(node: React.ReactNode) => (\r\n-        <div className=\"ant-tabs-tab\" style={{ marginRight: 0 }}>\r\n-          {node}\r\n-        </div>\r\n-      )}\r\n-    </DefaultTabBar>\r\n-  );\r\n-\r\n   return (\r\n     <div\r\n       className=\"tags-view-container\"\r\n       style={{\r\n@@ -178,9 +163,8 @@\n         type=\"editable-card\"\r\n         onChange={onChange}\r\n         activeKey={activeKey}\r\n         onEdit={onEdit}\r\n-        renderTabBar={renderTabBar}\r\n         items={items.map((item) => ({\r\n           key: item.path,\r\n           label: (\r\n             <Tooltip title={item.label}>\r\n"
                },
                {
                    "date": 1742033772341,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n import { useLocation, useNavigate } from \"react-router-dom\";\r\n \r\n import { DownOutlined } from \"@ant-design/icons\";\r\n import React from \"react\";\r\n+import { getRouteMetaByPath } from \"../../router\";\r\n \r\n export interface TagItem {\r\n   key: string;\r\n   label: string;\r\n@@ -32,49 +33,23 @@\n \r\n     // 检查标签是否已存在\r\n     const isExist = items.some((item) => item.path === pathname);\r\n     if (!isExist) {\r\n-      // 根据路径获取标签名称\r\n-      let label = \"\";\r\n-      switch (pathname) {\r\n-        case \"/\":\r\n-          label = \"Dashboard\";\r\n-          break;\r\n-        case \"/documentation\":\r\n-          label = \"Documentation\";\r\n-          break;\r\n-        case \"/guide\":\r\n-          label = \"Guide\";\r\n-          break;\r\n-        case \"/permission\":\r\n-          label = \"Permission\";\r\n-          break;\r\n-        case \"/route-permission\":\r\n-          label = \"Route Permission\";\r\n-          break;\r\n-        case \"/component\":\r\n-          label = \"Component\";\r\n-          break;\r\n-        case \"/business\":\r\n-          label = \"Business\";\r\n-          break;\r\n-        case \"/404\":\r\n-          label = \"404\";\r\n-          break;\r\n-        default:\r\n-          label = pathname.split(\"/\").pop() || \"Unknown\";\r\n+      // 根据路径获取路由元数据\r\n+      const meta = getRouteMetaByPath(pathname);\r\n+\r\n+      // 如果找到元数据并且不是隐藏的路由，则添加标签\r\n+      if (meta && !meta.hidden) {\r\n+        setItems((prevItems) => [\r\n+          ...prevItems,\r\n+          {\r\n+            key: pathname,\r\n+            label: meta.title,\r\n+            path: pathname,\r\n+            closable: pathname !== \"/\",\r\n+          },\r\n+        ]);\r\n       }\r\n-\r\n-      // 添加新标签\r\n-      setItems((prevItems) => [\r\n-        ...prevItems,\r\n-        {\r\n-          key: pathname,\r\n-          label,\r\n-          path: pathname,\r\n-          closable: pathname !== \"/\",\r\n-        },\r\n-      ]);\r\n     }\r\n   }, [location, items]);\r\n \r\n   // 切换标签\r\n"
                },
                {
                    "date": 1742100257193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,9 +114,8 @@\n       style={{\n         display: \"flex\",\n         alignItems: \"center\",\n         backgroundColor: \"#fff\",\n-        padding: \"0 16px\",\n         borderBottom: \"1px solid #f0f0f0\",\n       }}\n     >\n       <Tabs\n"
                },
                {
                    "date": 1742100263361,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,8 +114,9 @@\n       style={{\n         display: \"flex\",\n         alignItems: \"center\",\n         backgroundColor: \"#fff\",\n+        padding: \"0 16px\",\n         borderBottom: \"1px solid #f0f0f0\",\n       }}\n     >\n       <Tabs\n@@ -167,5 +168,5 @@\n     </div>\n   );\n };\n \n-export default TagsView;\n+export default TagsView;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1742100279480,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,165 +1,172 @@\n-import { Button, Dropdown, Menu, Space, Tabs, Tooltip } from \"antd\";\r\n-import { useCallback, useEffect, useState } from \"react\";\r\n-import { useLocation, useNavigate } from \"react-router-dom\";\r\n-\r\n-import { DownOutlined } from \"@ant-design/icons\";\r\n-import React from \"react\";\r\n-import { getRouteMetaByPath } from \"../../router\";\r\n-\r\n-export interface TagItem {\r\n-  key: string;\r\n-  label: string;\r\n-  path: string;\r\n-  closable: boolean;\r\n-}\r\n-\r\n-const TagsView: React.FC = () => {\r\n-  const navigate = useNavigate();\r\n-  const location = useLocation();\r\n-  const [activeKey, setActiveKey] = useState<string>(location.pathname);\r\n-  const [items, setItems] = useState<TagItem[]>([\r\n-    {\r\n-      key: \"/\",\r\n-      label: \"Dashboard\",\r\n-      path: \"/\",\r\n-      closable: false,\r\n-    },\r\n-  ]);\r\n-\r\n-  // 根据路由变化更新标签\r\n-  useEffect(() => {\r\n-    const { pathname } = location;\r\n-    setActiveKey(pathname);\r\n-\r\n-    // 检查标签是否已存在\r\n-    const isExist = items.some((item) => item.path === pathname);\r\n-    if (!isExist) {\r\n-      // 根据路径获取路由元数据\r\n-      const meta = getRouteMetaByPath(pathname);\r\n-\r\n-      // 如果找到元数据并且不是隐藏的路由，则添加标签\r\n-      if (meta && !meta.hidden) {\r\n-        setItems((prevItems) => [\r\n-          ...prevItems,\r\n-          {\r\n-            key: pathname,\r\n-            label: meta.title,\r\n-            path: pathname,\r\n-            closable: pathname !== \"/\",\r\n-          },\r\n-        ]);\r\n-      }\r\n-    }\r\n-  }, [location, items]);\r\n-\r\n-  // 切换标签\r\n-  const onChange = (key: string) => {\r\n-    setActiveKey(key);\r\n-    navigate(key);\r\n-  };\r\n-\r\n-  // 关闭标签\r\n-  const onEdit = (\r\n-    targetKey: React.MouseEvent | React.KeyboardEvent | string,\r\n-    action: \"add\" | \"remove\"\r\n-  ) => {\r\n-    if (action === \"remove\") {\r\n-      const targetPath = targetKey as string;\r\n-      const newItems = items.filter((item) => item.path !== targetPath);\r\n-      setItems(newItems);\r\n-\r\n-      // 如果关闭的是当前活动标签，则跳转到最后一个标签\r\n-      if (targetPath === activeKey) {\r\n-        const lastItem = newItems[newItems.length - 1];\r\n-        setActiveKey(lastItem.path);\r\n-        navigate(lastItem.path);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  // 关闭当前标签\r\n-  const closeCurrent = useCallback(() => {\r\n-    if (activeKey === \"/\") return; // 不关闭首页\r\n-    onEdit(activeKey, \"remove\");\r\n-  }, [activeKey]);\r\n-\r\n-  // 关闭其他标签\r\n-  const closeOthers = useCallback(() => {\r\n-    const newItems = items.filter(\r\n-      (item) => item.path === \"/\" || item.path === activeKey\r\n-    );\r\n-    setItems(newItems);\r\n-  }, [activeKey, items]);\r\n-\r\n-  // 关闭所有标签\r\n-  const closeAll = useCallback(() => {\r\n-    const newItems = items.filter((item) => item.path === \"/\");\r\n-    setItems(newItems);\r\n-    setActiveKey(\"/\");\r\n-    navigate(\"/\");\r\n-  }, [items, navigate]);\r\n-\r\n-  // 右键菜单\r\n-  const menu = (\r\n-    <Menu\r\n-      items={[\r\n-        {\r\n-          key: \"close-current\",\r\n-          label: \"Close Current\",\r\n-          onClick: closeCurrent,\r\n-          disabled: activeKey === \"/\",\r\n-        },\r\n-        {\r\n-          key: \"close-others\",\r\n-          label: \"Close Others\",\r\n-          onClick: closeOthers,\r\n-        },\r\n-        {\r\n-          key: \"close-all\",\r\n-          label: \"Close All\",\r\n-          onClick: closeAll,\r\n-        },\r\n-      ]}\r\n-    />\r\n-  );\r\n-\r\n-  return (\r\n-    <div\r\n-      className=\"tags-view-container\"\r\n-      style={{\r\n-        display: \"flex\",\r\n-        alignItems: \"center\",\r\n-        backgroundColor: \"#fff\",\r\n-        padding: \"0 16px\",\n-        borderBottom: \"1px solid #f0f0f0\",\r\n-      }}\r\n-    >\r\n-      <Tabs\r\n-        type=\"editable-card\"\r\n-        onChange={onChange}\r\n-        activeKey={activeKey}\r\n-        onEdit={onEdit}\r\n-        items={items.map((item) => ({\r\n-          key: item.path,\r\n-          label: (\r\n-            <Tooltip title={item.label}>\r\n-              <span>{item.label}</span>\r\n-            </Tooltip>\r\n-          ),\r\n-          closable: item.closable,\r\n-        }))}\r\n-        style={{ flex: 1, marginBottom: 0 }}\r\n-      />\r\n-      <Dropdown overlay={menu} trigger={[\"click\"]}>\r\n-        <Button type=\"text\" size=\"small\">\r\n-          <Space>\r\n-            操作\r\n-            <DownOutlined />\r\n-          </Space>\r\n-        </Button>\r\n-      </Dropdown>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default TagsView;\n\\ No newline at end of file\n+import { Button, Dropdown, Space, Tabs, Tooltip } from \"antd\";\n+import { useCallback, useEffect, useRef, useState } from \"react\";\n+import { useLocation, useNavigate } from \"react-router-dom\";\n+\n+import { DownOutlined } from \"@ant-design/icons\";\n+import React from \"react\";\n+import { getRouteMetaByPath } from \"../../router\";\n+\n+export interface TagItem {\n+  key: string;\n+  label: string;\n+  path: string;\n+  closable: boolean;\n+}\n+\n+const TagsView: React.FC = () => {\n+  const navigate = useNavigate();\n+  const location = useLocation();\n+  const [activeKey, setActiveKey] = useState<string>(location.pathname);\n+  // 使用 useRef 来存储 items，避免依赖循环\n+  const itemsRef = useRef<TagItem[]>([\n+    {\n+      key: \"/\",\n+      label: \"Dashboard\",\n+      path: \"/\",\n+      closable: false,\n+    },\n+  ]);\n+  const [items, setItems] = useState<TagItem[]>(itemsRef.current);\n+\n+  // 根据路由变化更新标签\n+  useEffect(() => {\n+    const { pathname } = location;\n+    setActiveKey(pathname);\n+\n+    // 检查标签是否已存在\n+    const isExist = itemsRef.current.some((item) => item.path === pathname);\n+    if (!isExist) {\n+      // 根据路径获取路由元数据\n+      const meta = getRouteMetaByPath(pathname);\n+\n+      // 如果找到元数据并且不是隐藏的路由，则添加标签\n+      if (meta && !meta.hidden) {\n+        const newItems = [\n+          ...itemsRef.current,\n+          {\n+            key: pathname,\n+            label: meta.title,\n+            path: pathname,\n+            closable: pathname !== \"/\",\n+          },\n+        ];\n+        itemsRef.current = newItems;\n+        setItems(newItems);\n+      }\n+    }\n+  }, [location]);\n+\n+  // 切换标签\n+  const onChange = (key: string) => {\n+    setActiveKey(key);\n+    navigate(key);\n+  };\n+\n+  // 关闭标签\n+  const onEdit = (\n+    targetKey: React.MouseEvent | React.KeyboardEvent | string,\n+    action: \"add\" | \"remove\"\n+  ) => {\n+    if (action === \"remove\") {\n+      const targetPath = targetKey as string;\n+      const newItems = itemsRef.current.filter(\n+        (item) => item.path !== targetPath\n+      );\n+      itemsRef.current = newItems;\n+      setItems(newItems);\n+\n+      // 如果关闭的是当前活动标签，则跳转到最后一个标签\n+      if (targetPath === activeKey) {\n+        const lastItem = newItems[newItems.length - 1];\n+        setActiveKey(lastItem.path);\n+        navigate(lastItem.path);\n+      }\n+    }\n+  };\n+\n+  // 关闭当前标签\n+  const closeCurrent = useCallback(() => {\n+    if (activeKey === \"/\") return; // 不关闭首页\n+    onEdit(activeKey, \"remove\");\n+  }, [activeKey]);\n+\n+  // 关闭其他标签\n+  const closeOthers = useCallback(() => {\n+    const newItems = itemsRef.current.filter(\n+      (item) => item.path === \"/\" || item.path === activeKey\n+    );\n+    itemsRef.current = newItems;\n+    setItems(newItems);\n+  }, [activeKey]);\n+\n+  // 关闭所有标签\n+  const closeAll = useCallback(() => {\n+    const newItems = itemsRef.current.filter((item) => item.path === \"/\");\n+    itemsRef.current = newItems;\n+    setItems(newItems);\n+    setActiveKey(\"/\");\n+    navigate(\"/\");\n+  }, [navigate]);\n+\n+  return (\n+    <div\n+      className=\"tags-view-container\"\n+      style={{\n+        display: \"flex\",\n+        alignItems: \"center\",\n+        backgroundColor: \"#fff\",\n+        padding: 0,\n+        borderBottom: \"1px solid #f0f0f0\",\n+      }}\n+    >\n+      <Tabs\n+        type=\"editable-card\"\n+        onChange={onChange}\n+        activeKey={activeKey}\n+        onEdit={onEdit}\n+        items={items.map((item) => ({\n+          key: item.path,\n+          label: (\n+            <Tooltip title={item.label}>\n+              <span>{item.label}</span>\n+            </Tooltip>\n+          ),\n+          closable: item.closable,\n+        }))}\n+        style={{ flex: 1, marginBottom: 0 }}\n+      />\n+      <Dropdown\n+        menu={{\n+          items: [\n+            {\n+              key: \"close-current\",\n+              label: \"关闭当前标签\",\n+              onClick: closeCurrent,\n+              disabled: activeKey === \"/\",\n+            },\n+            {\n+              key: \"close-others\",\n+              label: \"关闭其他标签\",\n+              onClick: closeOthers,\n+            },\n+            {\n+              key: \"close-all\",\n+              label: \"关闭所有标签\",\n+              onClick: closeAll,\n+            },\n+          ],\n+        }}\n+        trigger={[\"click\"]}\n+      >\n+        <Button type=\"text\" size=\"small\">\n+          <Space>\n+            操作\n+            <DownOutlined />\n+          </Space>\n+        </Button>\n+      </Dropdown>\n+    </div>\n+  );\n+};\n+\n+export default TagsView;\n"
                },
                {
                    "date": 1742100296496,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,9 +114,9 @@\n       style={{\n         display: \"flex\",\n         alignItems: \"center\",\n         backgroundColor: \"#fff\",\n-        padding: 0,\n+        padding: \"0 16px\",\n         borderBottom: \"1px solid #f0f0f0\",\n       }}\n     >\n       <Tabs\n"
                },
                {
                    "date": 1742100525238,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,9 +113,9 @@\n       className=\"tags-view-container\"\n       style={{\n         display: \"flex\",\n         alignItems: \"center\",\n-        backgroundColor: \"#fff\",\n+        backgroundColor: \"#f5f5f5\",\n         padding: \"0 16px\",\n         borderBottom: \"1px solid #f0f0f0\",\n       }}\n     >\n"
                },
                {
                    "date": 1742100532606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,9 +113,9 @@\n       className=\"tags-view-container\"\n       style={{\n         display: \"flex\",\n         alignItems: \"center\",\n-        backgroundColor: \"#f5f5f5\",\n+        backgroundColor: \"#e5e5e5\",\n         padding: \"0 16px\",\n         borderBottom: \"1px solid #f0f0f0\",\n       }}\n     >\n"
                },
                {
                    "date": 1742100565114,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,9 +113,8 @@\n       className=\"tags-view-container\"\n       style={{\n         display: \"flex\",\n         alignItems: \"center\",\n-        backgroundColor: \"#e5e5e5\",\n         padding: \"0 16px\",\n         borderBottom: \"1px solid #f0f0f0\",\n       }}\n     >\n"
                },
                {
                    "date": 1742100575382,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,8 +113,9 @@\n       className=\"tags-view-container\"\n       style={{\n         display: \"flex\",\n         alignItems: \"center\",\n+        backgroundColor: \"#fff\",\n         padding: \"0 16px\",\n         borderBottom: \"1px solid #f0f0f0\",\n       }}\n     >\n"
                },
                {
                    "date": 1742100824472,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,9 +119,8 @@\n         borderBottom: \"1px solid #f0f0f0\",\n       }}\n     >\n       <Tabs\n-        type=\"editable-card\"\n         onChange={onChange}\n         activeKey={activeKey}\n         onEdit={onEdit}\n         items={items.map((item) => ({\n"
                },
                {
                    "date": 1742101018390,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,9 +129,9 @@\n             <Tooltip title={item.label}>\n               <span>{item.label}</span>\n             </Tooltip>\n           ),\n-          closable: item.closable,\n+          closable: true,\n         }))}\n         style={{ flex: 1, marginBottom: 0 }}\n       />\n       <Dropdown\n"
                },
                {
                    "date": 1742101031231,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,9 +129,8 @@\n             <Tooltip title={item.label}>\n               <span>{item.label}</span>\n             </Tooltip>\n           ),\n-          closable: true,\n         }))}\n         style={{ flex: 1, marginBottom: 0 }}\n       />\n       <Dropdown\n"
                },
                {
                    "date": 1742101039392,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,8 +119,9 @@\n         borderBottom: \"1px solid #f0f0f0\",\n       }}\n     >\n       <Tabs\n+        type=\"editable-card\"\n         onChange={onChange}\n         activeKey={activeKey}\n         onEdit={onEdit}\n         items={items.map((item) => ({\n@@ -129,8 +130,9 @@\n             <Tooltip title={item.label}>\n               <span>{item.label}</span>\n             </Tooltip>\n           ),\n+          closable: item.closable,\n         }))}\n         style={{ flex: 1, marginBottom: 0 }}\n       />\n       <Dropdown\n"
                },
                {
                    "date": 1742118631330,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,16 +17,9 @@\n   const navigate = useNavigate();\n   const location = useLocation();\n   const [activeKey, setActiveKey] = useState<string>(location.pathname);\n   // 使用 useRef 来存储 items，避免依赖循环\n-  const itemsRef = useRef<TagItem[]>([\n-    {\n-      key: \"/\",\n-      label: \"Dashboard\",\n-      path: \"/\",\n-      closable: false,\n-    },\n-  ]);\n+  const itemsRef = useRef<TagItem[]>([]);\n   const [items, setItems] = useState<TagItem[]>(itemsRef.current);\n \n   // 根据路由变化更新标签\n   useEffect(() => {\n"
                },
                {
                    "date": 1742119333667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,16 @@\n   const navigate = useNavigate();\n   const location = useLocation();\n   const [activeKey, setActiveKey] = useState<string>(location.pathname);\n   // 使用 useRef 来存储 items，避免依赖循环\n-  const itemsRef = useRef<TagItem[]>([]);\n+  const itemsRef = useRef<TagItem[]>([\n+    {\n+      key: \"/\",\n+      label: \"仪表盘\",\n+      path: \"/\",\n+      closable: false,\n+    },\n+  ]);\n   const [items, setItems] = useState<TagItem[]>(itemsRef.current);\n \n   // 根据路由变化更新标签\n   useEffect(() => {\n"
                },
                {
                    "date": 1742123520759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { useLocation, useNavigate } from \"react-router-dom\";\n \n import { DownOutlined } from \"@ant-design/icons\";\n import React from \"react\";\n-import { getRouteMetaByPath } from \"../../router\";\n+import { getRouteMetaByPath } from \"@/router\";\n \n export interface TagItem {\n   key: string;\n   label: string;\n"
                }
            ],
            "date": 1742032883390,
            "name": "Commit-0",
            "content": "import { Button, Dropdown, Menu, Space, Tabs, Tooltip } from \"antd\";\r\nimport { CloseOutlined, DownOutlined } from \"@ant-design/icons\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nimport React from \"react\";\r\n\r\nexport interface TagItem {\r\n  key: string;\r\n  label: string;\r\n  path: string;\r\n  closable: boolean;\r\n}\r\n\r\nconst TagsView: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [activeKey, setActiveKey] = useState<string>(location.pathname);\r\n  const [items, setItems] = useState<TagItem[]>([\r\n    {\r\n      key: \"/\",\r\n      label: \"Dashboard\",\r\n      path: \"/\",\r\n      closable: false,\r\n    },\r\n  ]);\r\n\r\n  // 根据路由变化更新标签\r\n  useEffect(() => {\r\n    const { pathname } = location;\r\n    setActiveKey(pathname);\r\n\r\n    // 检查标签是否已存在\r\n    const isExist = items.some((item) => item.path === pathname);\r\n    if (!isExist) {\r\n      // 根据路径获取标签名称\r\n      let label = \"\";\r\n      switch (pathname) {\r\n        case \"/\":\r\n          label = \"Dashboard\";\r\n          break;\r\n        case \"/documentation\":\r\n          label = \"Documentation\";\r\n          break;\r\n        case \"/guide\":\r\n          label = \"Guide\";\r\n          break;\r\n        case \"/permission\":\r\n          label = \"Permission\";\r\n          break;\r\n        case \"/route-permission\":\r\n          label = \"Route Permission\";\r\n          break;\r\n        case \"/component\":\r\n          label = \"Component\";\r\n          break;\r\n        case \"/business\":\r\n          label = \"Business\";\r\n          break;\r\n        case \"/404\":\r\n          label = \"404\";\r\n          break;\r\n        default:\r\n          label = pathname.split(\"/\").pop() || \"Unknown\";\r\n      }\r\n\r\n      // 添加新标签\r\n      setItems((prevItems) => [\r\n        ...prevItems,\r\n        {\r\n          key: pathname,\r\n          label,\r\n          path: pathname,\r\n          closable: pathname !== \"/\",\r\n        },\r\n      ]);\r\n    }\r\n  }, [location, items]);\r\n\r\n  // 切换标签\r\n  const onChange = (key: string) => {\r\n    setActiveKey(key);\r\n    navigate(key);\r\n  };\r\n\r\n  // 关闭标签\r\n  const onEdit = (\r\n    targetKey: React.MouseEvent | React.KeyboardEvent | string,\r\n    action: \"add\" | \"remove\"\r\n  ) => {\r\n    if (action === \"remove\") {\r\n      const targetPath = targetKey as string;\r\n      const newItems = items.filter((item) => item.path !== targetPath);\r\n      setItems(newItems);\r\n\r\n      // 如果关闭的是当前活动标签，则跳转到最后一个标签\r\n      if (targetPath === activeKey) {\r\n        const lastItem = newItems[newItems.length - 1];\r\n        setActiveKey(lastItem.path);\r\n        navigate(lastItem.path);\r\n      }\r\n    }\r\n  };\r\n\r\n  // 关闭当前标签\r\n  const closeCurrent = useCallback(() => {\r\n    if (activeKey === \"/\") return; // 不关闭首页\r\n    onEdit(activeKey, \"remove\");\r\n  }, [activeKey]);\r\n\r\n  // 关闭其他标签\r\n  const closeOthers = useCallback(() => {\r\n    const newItems = items.filter(\r\n      (item) => item.path === \"/\" || item.path === activeKey\r\n    );\r\n    setItems(newItems);\r\n  }, [activeKey, items]);\r\n\r\n  // 关闭所有标签\r\n  const closeAll = useCallback(() => {\r\n    const newItems = items.filter((item) => item.path === \"/\");\r\n    setItems(newItems);\r\n    setActiveKey(\"/\");\r\n    navigate(\"/\");\r\n  }, [items, navigate]);\r\n\r\n  // 右键菜单\r\n  const menu = (\r\n    <Menu\r\n      items={[\r\n        {\r\n          key: \"close-current\",\r\n          label: \"Close Current\",\r\n          onClick: closeCurrent,\r\n          disabled: activeKey === \"/\",\r\n        },\r\n        {\r\n          key: \"close-others\",\r\n          label: \"Close Others\",\r\n          onClick: closeOthers,\r\n        },\r\n        {\r\n          key: \"close-all\",\r\n          label: \"Close All\",\r\n          onClick: closeAll,\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n\r\n  // 自定义标签\r\n  const renderTabBar: any = (props: any, DefaultTabBar: any) => (\r\n    <DefaultTabBar {...props}>\r\n      {(node: any) => (\r\n        <div className=\"ant-tabs-tab\" style={{ marginRight: 0 }}>\r\n          {node}\r\n        </div>\r\n      )}\r\n    </DefaultTabBar>\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className=\"tags-view-container\"\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        backgroundColor: \"#fff\",\r\n        padding: \"0 16px\",\r\n        borderBottom: \"1px solid #f0f0f0\",\r\n      }}\r\n    >\r\n      <Tabs\r\n        type=\"editable-card\"\r\n        onChange={onChange}\r\n        activeKey={activeKey}\r\n        onEdit={onEdit}\r\n        renderTabBar={renderTabBar}\r\n        items={items.map((item) => ({\r\n          key: item.path,\r\n          label: (\r\n            <Tooltip title={item.label}>\r\n              <span>{item.label}</span>\r\n            </Tooltip>\r\n          ),\r\n          closable: item.closable,\r\n        }))}\r\n        style={{ flex: 1, marginBottom: 0 }}\r\n      />\r\n      <Dropdown overlay={menu} trigger={[\"click\"]}>\r\n        <Button type=\"text\" size=\"small\">\r\n          <Space>\r\n            操作\r\n            <DownOutlined />\r\n          </Space>\r\n        </Button>\r\n      </Dropdown>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TagsView;\r\n"
        }
    ]
}